input{
	kafka{
		bootstrap_servers=>["192.168.3.132:9092"]
		client_id=>"test"
		group_id=>"test"
		auto_offset_reset=>"latest"
		consumer_threads=>5
		decorate_events=>true
		topics_pattern=>"kafka-.*"
		type=>"kafka"
	}
	
}

filter{
	dissect{
		mapping=>{
			"message"=>"%{logdate} %{+logdate} [%{src}] [%{level}] %{thread} %{classline} - %{msg}"
		}
	}

	if !([msg] =~ /^(\s*)\n/){
	
	if [src] == "gwlog" {
		dissect{
			mapping=>{
				"msg"=>"%{model} %{sn} %{process} %{level} [date:%{logdate}]:%{classline} %{msg}"
			}
		}

                mutate{
			remove_field=>["@version","host","message","@timestamp","thread"]
		}
		
		date{
			match=>["logdate","yyyy-MM-dd HH:mm:ss.SSS","UNIX","yyyy.MM.dd HH:mm:ss"]
			target=>"@timestamp"
		}
		ruby{
			code=>"event.set('logdate',event.get('@timestamp').time.localtime + 8*60*60)"
		}

		if [msg] =~ /(?=msg:)/{
			dissect{
				mapping=>{
					"msg"=>"msg:%{msg}"
				}
			}
			
			json{
				source=>"msg"
			}

		}
		
		if [msg] =~ /(?=netbus send to)/{
			dissect{
				mapping=>{
					"msg"=>"netbus send to %{dest}:%{msg}"
				}
			}
			json{
				source=>"msg"
			}
			if [func] == "gwevent" {
				mutate{
					add_field=>{"sec_json"=>"%{eventparams}"}
				}
				json{
					source=>"sec_json"
					remove_field=>["sec_json","eventparams"]
				}
			}
			
			#if [func] in ["basicInfo","getPower"] {
			#	mutate{
			#		add_field=>{"sec_json"=>"%{returnData}"}
			#	}
			#	json{
			#		source=>"sec_json"
			#		remove_field=>["sec_json","returnData","params"]
			#	}
			#	
			#}
		}
	} else {
		dissect{
			mapping=>{
				"src"=>"IP:%{ip}/%{src}"
			}
		}
		
		mutate{
			remove_field=>["@version","host","message","@timestamp"]
			add_field=>{
				"process"=>"%{src}"
			}
		}
		date{
			match=>["logdate","yyyy-MM-dd HH:mm:ss.SSS"]
		}

		if [msg] =~ /(?=metrics:)/{
			dissect{
				mapping=>{
					"msg"=>"metrics:%{msg}"
				}
			}
	
			mutate{
				update=>{"type"=>"metrics"}
			}
		}
	}
}
} # end 'msg != ""'

output{
	if !([msg] =~ /^(\s*)\n/) {
	if [src] == "gwlog" {
		elasticsearch{
			hosts=>["192.168.3.132:9200"]
			index=>"%{process}"
			timeout=>300
		}
		
		#if [level] in ["ERROR","FATAL"] {
		#	http{
		#		url=>"https://oapi.dingtalk.com/robot/send?access_token=d1547fad582bde69b03c70e3a2430b322f0e874f2298ab0f80c4c7668e024f88"
		#		http_method=>"post"
		#		content_type=>"application/json; charset=utf-8"
		#		format=>"message"
		#		message=>'{
		#			"msgtype":"text",
		#			"text":{
		#				"content":"[%{model}-%{sn}]:[%{logdate}]:[%{src}]:[%{level}]:%{classline} -> %{msg}"
		#			}
		#		}'
		#	}
		#}
	} else {
		if [type] == "metrics" {
			#http{
			#	url=>"http://192.168.3.233:2222/vertx/metrics?token=d1547fad582bde69b03c70e3a2430b322f0e"
			#	http_method=>"post"
			#	content_type=>"application/json; charset=utf-8"
			#	format=>"message"
			#	message=>"%{msg}"
			#}

			jdbc{
				driver_jar_path=>"/usr/local/work/log/logstash/mysql/mysql-connector-java-5.1.47.jar"
				driver_class=>"com.mysql.jdbc.Driver"
				connection_string=>"jdbc:mysql://192.168.3.233:3306/mydb?useSSL=false&user=root&password=123456"
				statement=>["INSERT INTO metrics(id,logdate,process,msg) VALUES(1,?,?,?) ON DUPLICATE KEY UPDATE logdate=?,msg=?","logdate","process","msg","logdate","msg"]
			}
			
		} else {
		elasticsearch{
			hosts=>["192.168.3.132:9200"]
			index=>"%{src}"
			timeout=>300
		}
	        if [level] in ["ERROR","FATAL"] {	
			if [msg] =~ /(?=return data is null)/{
				# do nothing.
			} else if [msg] =~ /(?=========event no send)/{
				#do nothing.
			} else {
				http{
					url=>"https://oapi.dingtalk.com/robot/send?access_token=d1547fad582bde69b03c70e3a2430b322f0e874f2298ab0f80c4c7668e024f88"
					http_method=>"post"
					content_type=>"application/json; charset=utf-8"
					format=>"message"
					message=>'{
						"msgtype":"text",
						"text":{
							"content":"[%{logdate}]:[%{src}]:[%{level}]:%{classline} -> %{msg}"
						}
					}'
				}
			}
	 	  }
		}
   	      }
	} # end of 'if msg != ""'
}	
#	if [level] in ["WARN","ERROR","FATAL"] {
#		email{
#			port=>"25"
#			address=>"smtp.qq.com"
#			username=>"@qq.com"
#			password=>""
#			authentication=>"plain"
#			use_tls=>false
#			from=>""
#			subject=>"warning: program have error!"
#			to=>""
#			via=>"smtp"
#			body=>"%{src},%{classline},%{msg}"
#		}
#		http{
#			url=>"https://oapi.dingtalk.com/robot/send?access_token=d1547fad582bde69b03c70e3a2430b322f0e874f2298ab0f80c4c7668e024f88"
#			http_method=>"post"
#			content_type=>"application/json; charset=utf-8"
#			format=>"message"
#			message=>'{
#				"msgtype":"text",
#				"text":{
#					"content":"[%{logdate}]:[%{src}]:[%{level}]:%{classline} -> %{msg}"
#				}
#			}'
#		}
#	}

